@model List<ProyectoIdentity.Controllers.Categorias>
@{
    string[] colores = { "bg-danger", "bg-danger", "bg-danger", "bg-warning", "", "bg-success" };
}
<h2 class="text-center mt-5">Percepciones para cada Dimensión y Pregunta</h2>
@foreach (var categorias in Model)
{
    <div class="row mb-5">
        <div class="col-md-12">
            <div class="card" style="width:100%">
                <div class="card-body">
                    <h5 class="card-title">@categorias.CategoriaNombre</h5>
                </div>
                <hr />
                <div class="card-body">
                    <p class="card-link">@categorias.CategoriaDescripcion</p>
                </div>
            </div>
        </div>
        @foreach (var pregunta in categorias.Preguntas)
        {
            if (pregunta.TipoPreguntaId == 2)
            {
                <div class="col-md-6 d-flex flex-column justify-content-between">
                    <p class="m-2">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                    <div class="progress">
                        <div class="progress-bar @pregunta.Color" role="progressbar" style="width: @pregunta.porcentaje%" aria-valuenow="@pregunta.Promedio" aria-valuemin="0" aria-valuemax="5">@pregunta.Promedio.ToString("0.00")</div>
                    </div>
                </div>
            }
            if (pregunta.TipoPreguntaId == 6)
            {
                <div class="col-md-12 d-flex flex-column justify-content-between">
                    <p class="m-2">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                </div>
                var datosRespuesta = pregunta.Respuestas.GroupBy(x => x.DescripcionRespuesta).ToList();

                @foreach (var data in datosRespuesta)
                {
                    var porcentaje = (int)(data.Average(x => x.valor) * 20);
                    string poscolor = colores[(int)(data.Average(x => x.valor))];
                    float average = (float)data.Average(x => x.valor);
                    <div class="col-md-6 px-5 d-flex flex-column justify-content-between">
                        <p>@data.Select(x=>x.DescripcionRespuesta).FirstOrDefault()</p>
                        <div class="progress">
                            <div class="progress-bar @poscolor" role="progressbar" style="width:@porcentaje%" aria-valuenow="@data.Average(x=>x.valor)" aria-valuemin="0" aria-valuemax="5">@average.ToString("0.00")</div>
                        </div>
                    </div>
                }
            }
            if (pregunta.TipoPreguntaId == 4)
            {
                <div class="col-md-12 d-flex flex-column justify-content-between">
                    <p class="m-2">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                </div>
                var datosRespuesta = pregunta.Respuestas.GroupBy(x => x.DescripcionRespuesta).ToList();
                @foreach (var data in datosRespuesta)
                {
                    var porcentaje = (int)(data.Average(x => x.valor)*10);
                    string poscolor = colores[(int)(data.Average(x => x.valor)/2)];
                    
                    float average = (float)data.Average(x => x.valor);
                    <div class="col-md-6 px-5 d-flex flex-column justify-content-between">
                        <p>@data.Select(x=>x.DescripcionRespuesta).FirstOrDefault()</p>
                        <div class="progress">
                            <div class="progress-bar @poscolor" role="progressbar" style="width:@porcentaje%" aria-valuenow="@data.Average(x=>x.valor)" aria-valuemin="0" aria-valuemax="5">@average.ToString("0.00")</div>
                        </div>
                    </div>
                }
            }

            if (pregunta.TipoPreguntaId == 3)
            {
                <div class="col-md-12 d-flex flex-column justify-content-between">
                    <p class="m-2">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                </div>
                var datosRespuesta = String.Join(",", pregunta.Respuestas.Select(x => x.DescripcionRespuesta).ToArray()).Replace(";",",");
                var respuestasAgrupadas = datosRespuesta.Split(",")
                .GroupBy(r => r)
                .Select(g => new
                {
                    DescripcionRespuesta = g.Key,
                    Cantidad = g.Count()
                }).OrderByDescending(g=>g.Cantidad);
                @foreach (var data in respuestasAgrupadas)
                {
                    var porcenatje = data.Cantidad * 100 / pregunta.CantidadRespuestas;
                    double poscolor1 =((double)porcenatje / (double)20);
                    string poscolor = colores[(int)Math.Ceiling(poscolor1)];
                    <div class="col-md-6 px-5 d-flex flex-column justify-content-between">
                    <p>@data.DescripcionRespuesta</p>
                    <div class="progress">
                            <div class="progress-bar @poscolor" role="progressbar" style="width:100%" aria-valuenow="100%" aria-valuemin="0" aria-valuemax="100">@porcenatje</div>
                    </div>
                    </div>
                }
            }

            if (pregunta.TipoPreguntaId == 1)
            {
                <div class="col-md-12 d-flex flex-column justify-content-between">
                    <p class="m-2">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                </div>
                var datosRespuesta = pregunta.Respuestas.GroupBy(x => x.DescripcionRespuesta).ToList();
                @foreach (var data in datosRespuesta)
                {
                    
                    var porcentaje = (int)(data.Count()*100 / pregunta.CantidadRespuestas);
                    string poscolor = colores[(int)(data.Count() * 5 / pregunta.CantidadRespuestas)];
                    <div class="col-md-6 px-5 d-flex flex-column justify-content-between">
                        <p>@data.Select(x=>x.DescripcionRespuesta).FirstOrDefault()</p>
                        <div class="progress">
                            <div class="progress-bar @poscolor" role="progressbar" style="width:@porcentaje%" aria-valuenow="@porcentaje" aria-valuemin="0" aria-valuemax="5">@porcentaje</div>
                        </div>
                    </div>
                }
            }
        }
    </div>
}

<!--<canvas id="myChart5"></canvas>-->
</div>

