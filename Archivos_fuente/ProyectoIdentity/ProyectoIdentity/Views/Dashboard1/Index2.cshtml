@model ProyectoIdentity.Controllers.orderBycategory
@{
    string[] colores = { "bg-danger", "bg-danger", "bg-danger", "bg-warning", "bg-primary", "bg-success" };
    string[] coloresDimension = { "#4DB3C7", "#F6C264", "#1D6E9B", "#CF423F" };
    int categoriIndex = 0;
}
<h2 class="text-center mt-5">Percepciones para cada Dimensión y Pregunta</h2>
@foreach (var categorias in Model.Categorias)
{
    <div class="row mx-3 my-4">
        <div class="col-md-12 ">
            <div class="card" style="width:100%">
                <div class="card-body">
                    <h5 class="card-title">@categorias</h5>
                    <p>Promedio de la dimension:</p>
                </div>

                <div class="card-body" style="background-color:@coloresDimension[categoriIndex]">
                    <p class="card-link text-white fw-bolder">@categorias.CategoriaDescripcion</p>
                </div>
            </div>
        </div>
    </div>

    categoriIndex = categoriIndex + 1;

    @foreach (var pregunta in categorias.Preguntas)
    {
        if (pregunta.NumeroPregunta == 18)
        {
            <div class="row mx-1">
                <div class="col-md-12 d-flex flex-column justify-content-between m-2">
                    <p class="m-2 fw-bolder">17 . @Model.QuestionPer.NombrePregunta</p>
                </div>
            </div>
            var datosPregunta = Model.QuestionPer.Respuestas.GroupBy(x => x.Concepto).ToList();
            <div class="row d-flex mx-5 justify-content-between">
                    <div class="col-md-3 border border-1 border-dark  d-flex align-items-center fw-bolder fs-6">Concepto</div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">
                    <div class="row">
                        <div class="col-md-12 fs-6">Conoce el Beneficio</div>
                        <div class="col-md-6 border-top border-dark ">SI</div>
                        <div class="col-md-6 border-top border-start border-dark ">NO</div>
                    </div>
                    
                    </div>
                <div class="col-md-3 border border-1 border-dark  d-flex fw-bolder">
                    <div class="row">
                        <div class="col-md-12 fs-6">atractivo del beneficio</div>
                        <div class="col-md-3  border-top border-dark fs-8">Bajo</div>
                        <div class="col-md-3  border-top border-dark fs-8">Regular</div>
                        <div class="col-md-3  border-top border-dark fs-8">Medio</div>
                        <div class="col-md-3  border-top border-dark fs-8">Alto</div>
                    </div>
                    
                    
                    </div>
                <div class="col-md-4 border border-1 border-dark  d-flex align-items-center fw-bolder">
                    <div class="row">
                        <div class="col-md-12 fs-6">funciona el beneficio</div>
                        <div class="col-md-4  border-top border-dark ">No Aplica</div>
                        <div class="col-md-2  border-top border-dark ">Malo</div>
                        <div class="col-md-3  border-top border-dark ">Regular</div>
                        <div class="col-md-3  border-top border-dark ">Bueno</div>
                    </div>
                    
                </div>
                   

                
            @foreach (var res in datosPregunta)
                {
                   @* <p>@res.Atractivo</p>*@
                    <div class="col-md-3 border border-1 border-dark  d-flex align-items-center fw-bolder">
                    @res.Key
                    </div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">
                        <div class="col-md-6 d-flex align-items-center">70%</div>
                        <div class="col-md-6 d-flex align-items-center border-start border-dark">30%</div>
                    </div>
                    <div class="col-md-3 border border-1 border-dark  d-flex align-items-center fw-bolder">
                        <div class="row">
                            <div class="col-md-3  border-end border-dark ">15%</div>
                            <div class="col-md-3  border-end border-dark ">20%</div>
                            <div class="col-md-3  border-end border-dark ">20%</div>
                            <div class="col-md-3">25%</div>
                        </div>
                    </div>
                    <div class="col-md-4 border border-1 border-dark  d-flex align-items-center fw-bolder">
                        <div class="row">
                            <div class="col-md-4  border-end border-dark ">15%</div>
                            <div class="col-md-2  border-end border-dark ">20%</div>
                            <div class="col-md-3  border-end border-dark ">20%</div>
                            <div class="col-md-3">25%</div>
                        </div>

                    </div>
                    @*<p>@res.Funcionamiento</p>
                    <p>@res.Beneficio</p>*@
                }
            </div>
            
        }

        if (pregunta.TipoPreguntaId == 2)
        {
            <div class="row mx-1">
                <div class="col-md-12 d-flex flex-column  justify-content-center px-5">
                    <div class="row  d-flex  h-100 justify-content-center align-items-center ">
                        <div class="col-md-7 border border-1 border-dark h-100 d-flex align-items-center fw-bolder">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</div>
                        <div class="col-md-1 border border-1 border-dark @pregunta.Color h-100 d-flex align-items-center fw-bolder text-white">@pregunta.Promedio.ToString("0.00")</div>
                        <div class="progress col-md-4 ">
                            <div class="progress-bar @pregunta.Color fw-bolder" role="progressbar" style="width: @pregunta.porcentaje%" aria-valuenow="@pregunta.Promedio" aria-valuemin="0" aria-valuemax="100">@pregunta.porcentaje%</div>
                        </div>
                    </div>
                </div>
            </div>
        }
        if (pregunta.TipoPreguntaId == 6)
        {

            <div class="col-md-12 d-flex flex-column justify-content-between m-2">
                <p class="m-2 fw-bolder">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
            </div>

            var datosRespuesta = pregunta.Respuestas.GroupBy(x => x.DescripcionRespuesta).ToList();
            if (pregunta.NumeroPregunta == 15)
            {




                <div class="row d-flex mx-5">
                    <div class="col-md-3 border border-1 border-dark  d-flex align-items-center fw-bolder">Sustancia</div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">Ninguna</div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">Baja</div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">Media</div>
                    <div class="col-md-2 border border-1 border-dark  d-flex align-items-center fw-bolder">Alta</div>

                    @foreach (var data in datosRespuesta)
                    {
                        var opcion = data.Select(x => x.RespuestaOpcion).ToList();
                        List<string> valores = new List<string> {"Nunca","1 y 3 veces/mes","Entre 4 y 10 veces/mes","Más de 10 veces/mes",};
                        var opciones = valores.Select(x => new
                        {
                            Cantidad =(int)Math.Ceiling((double)opcion.Count(y => y == x)*100/data.Count())
                        });

                        <div class="col-md-3 border border-1 border-dark d-flex align-items-center fw-bolder">@data.Key</div>

                        <div class="col-md-2 border border-1 border-dark d-flex align-items-center fw-bolder">@opciones.ElementAt(0).Cantidad %</div>
                        <div class="col-md-2 border border-1 border-dark d-flex align-items-center fw-bolder">@opciones.ElementAt(1).Cantidad %</div>
                        <div class="col-md-2 border border-1 border-dark d-flex align-items-center fw-bolder">@opciones.ElementAt(2).Cantidad %</div>
                        <div class="col-md-2 border border-1 border-dark d-flex align-items-center fw-bolder">@opciones.ElementAt(3).Cantidad %</div>
                    }

                </div>

            }
            else
            {
                @foreach (var data in datosRespuesta)
                {
                    var porcentaje = (int)(data.Average(x => x.valor) * 20);
                    string poscolor = colores[(int)(data.Average(x => x.valor))];
                    float average = (float)data.Average(x => x.valor);
                    <div class="row mx-1">
                        <div class="col-md-12 d-flex flex-column justify-content-center px-5">
                            <div class="row  d-flex  h-100 justify-content-center align-items-center ">
                                <div class="col-md-7 border border-1 border-dark h-100 d-flex align-items-center fw-bolder">@data.Select(x=>x.DescripcionRespuesta).FirstOrDefault()</div>
                                <div class="col-md-1 border border-1 border-dark @poscolor h-100 d-flex align-items-center fw-bolder text-white">@average.ToString("0.00")</div>
                                <div class="col-md-4 p-3">
                                    <div class="progress  p-0">
                                        <div class="progress-bar @poscolor fw-bolder" role="progressbar" style="width: @porcentaje% " aria-valuenow="@average" aria-valuemin="0" aria-valuemax="5">@porcentaje %</div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>


                }
            }
        }
        if (pregunta.TipoPreguntaId == 4)
        {
            <div class="row mx-1">
                <div class="col-md-12 d-flex flex-column justify-content-between">
                    <p class="m-2 fw-bolder">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
                </div>
                <div class="col-md-12 mb-3 flex-column justify-content-center px-5">
                    <div class="row justify-content-between justify-content-center align-items-center">
                        @{
                            var datosRespuesta = pregunta.Respuestas.GroupBy(x => x.DescripcionRespuesta).ToList();
                        }
                        <div class="row mx-1">
                            @foreach (var data in datosRespuesta)
                            {

                                var porcentaje = (int?)(data.Average(x => x.valor) * 10) ?? 0;
                                double colorInt = porcentaje > 0 ? Math.Ceiling((double)porcentaje / 20) : 0;
                                string poscolor = colores[(int)colorInt];
                                float average = (float)data.Average(x => x.valor);


                                <div class="col-md-4 border border-1 border-dark h-100 d-flex  align-items-center fw-bolder justify-content-between">@data.Select(x=>x.DescripcionRespuesta).FirstOrDefault()</div>
                                <div class="col-md-2 border border-1 border-dark @poscolor h-100 d-flex align-items-center fw-bolder text-white">@average.ToString("0.00")</div>


                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        if (pregunta.TipoPreguntaId == 3)
        {
            <div class="col-md-12 d-flex flex-column justify-content-between">
                <p class="m-2 fw-bolder">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
            </div>
            var datosRespuesta = String.Join(";", pregunta.Respuestas.Select(x => x.DescripcionRespuesta).ToArray());
            datosRespuesta = datosRespuesta.Replace(";;", ";");

            var respuestasAgrupadas1 = datosRespuesta.Split(";").ToList();


            var respuestasAgrupadas = respuestasAgrupadas1.Take(respuestasAgrupadas1.Count() - 1);

            var opciones = pregunta.Opciones
                .Select(x => new
                {
                    DescripcionRespuesta = x,
                    Cantidad = respuestasAgrupadas.Count(y => y == x)
                });
            @foreach (var data in opciones)
            {
                var porcenatje = data != null ? data.Cantidad * 100 / pregunta.CantidadRespuestas : 0;
                double poscolor1 = porcenatje >= 20 ? Math.Ceiling((double)porcenatje / (double)20) : 0;

                string poscolor = colores[(int)poscolor1];
                <div class="row mx-1">
                    <div class="col-md-12 d-flex flex-column   justify-content-center px-5">
                        <div class="row  d-flex h-100 justify-content-center align-items-center">
                            <div class="col-md-7 border border-1 border-dark h-100 d-flex align-items-center fw-bolder">@data.DescripcionRespuesta</div>
                            <div class="col-md-1 border border-1 border-dark @poscolor h-100 d-flex align-items-center fw-bolder text-white"><i class="bi bi-person"></i>@data.Cantidad</div>
                            <div class="col-md-4 p-3">
                                <div class="progress p-0">
                                    <div class="progress-bar @poscolor fw-bolder" role="progressbar" style="width:@porcenatje%" aria-valuenow="100%" aria-valuemin="0" aria-valuemax="100%">@porcenatje %</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        if (pregunta.TipoPreguntaId == 1)
        {
            <div class="col-md-12 d-flex flex-column justify-content-between">
                <p class="m-2 fw-bolder">@pregunta.NumeroPregunta . @pregunta.PreguntaNombre</p>
            </div>
            var respuestasAgrupadas = pregunta.Respuestas.Select(x => x.DescripcionRespuesta).ToList();
            var opciones = pregunta.Opciones
            .Select(x => new
            {
                DescripcionRespuesta = x,
                Cantidad = respuestasAgrupadas.Count(y => y == x)
            });

            @foreach (var data in opciones)
            {

                var porcentaje = (int?)(data.Cantidad * 100 / pregunta.CantidadRespuestas) ?? 0;
                double colorInt = porcentaje > 0 ? Math.Ceiling((double)data.Cantidad * 5 / pregunta.CantidadRespuestas) : 0;
                string poscolor = colores[(int)colorInt];
                <div class="row mx-1">
                    <div class="col-md-12 d-flex flex-column justify-content-center px-5">
                        <div class="row  d-flex h-100 justify-content-center align-items-center">
                            <div class="col-md-7 border border-1 border-dark h-100 d-flex align-items-center fw-bolder">@data.DescripcionRespuesta</div>
                            <div class="col-md-1 border border-1 border-dark @poscolor h-100 d-flex align-items-center fw-bolder text-white"><i class="bi bi-person"></i>@data.Cantidad</div>
                            <div class="col-md-4 p-3">
                                <div class="progress p-0">
                                    <div class="progress-bar fw-bolder @poscolor " role="progressbar" style="width:@porcentaje%" aria-valuenow="@pregunta.Promedio" aria-valuemin="0" aria-valuemax="5">@porcentaje %</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }

}

<!--<canvas id="myChart5"></canvas>-->
