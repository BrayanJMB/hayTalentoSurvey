@using Newtonsoft.Json;
@model ProyectoIdentity.Controllers.SurveyShow

<div class="contenedor-imagen w-100 m-5">
    <img class="w-100" src="~/imagenes/MontañaMadurez.png" alt="Logo hay talento">
    <div class="contenedor-texto w-100 h-100 d-flex flex-column justify-content-between">
        <div class="d-flex align-items-center">
            <img style="max-width:150px" src="~/imagenes/LogoHayTalento.png" alt="Logo hay talento">
            <h1>@Model.Encuesta.NombreEncuesta.Replace("Bienvenido a la","")</h1>
        </div>
        <h4>@DateTime.UtcNow.ToLocalTime()</h4>
    </div>
</div>

    <div class="row d-flex justify-content-around mb-5">
        <h2 class="text-center">Comparativa Madurez y Beneficios</h2>
        <div class="col-md-8">
            <canvas id="barChartPromedio"></canvas>
        </div>
        <div class="col-2  d-flex flex-column justify-content-around">
            <div style="width:85%;">
                <canvas id="madurezDonut"></canvas>
                <div class="absolute-center text-center">
                    <h5>Madurez</h5>
                </div>
            </div>
            <div style="width:85%;">
                <canvas id="generalDonut"></canvas>
                <div class="absolute-center text-center">
                    <h5>Beneficios</h5>
                </div>
            </div>
        </div>
    </div>

<div class="row">
    <h2>Percepciones para cada Dimensión y Pregunta</h2>
    <div class="col-md-12">
        <div class="card" style="width:100%">
            <div class="card-body">
                <h5 class="card-title">@Model.NombreCategoria</h5>
            </div>
            <hr />
            <div class="card-body">
                <p href="#" class="card-link">@Model.DescripcionCategoria</p>
                
            </div>
        </div>
    </div>
        @foreach (var pregunta in Model.datospreguntas)
        {
        <div class="row mx-1">
            <div class="col-md-12 d-flex flex-column  justify-content-center px-5">
                <div class="row  d-flex  h-100 justify-content-center align-items-center ">
                    <div class="col-md-7 border border-1 border-dark h-100 d-flex align-items-center fw-bolder">@pregunta.numeroPregunta . @pregunta.mispreguntas</div>
                    <div class="col-md-1 border border-1 border-dark @pregunta.Color h-100 d-flex align-items-center fw-bolder text-white">@pregunta.Promedio.ToString("0.00")</div>
                    <div class="progress col-md-4 ">
                        <div class="progress-bar @pregunta.Color fw-bolder" role="progressbar" style="width: @pregunta.porcentaje%" aria-valuenow="@pregunta.Promedio" aria-valuenow="23" aria-valuemin="0" aria-valuemax="100">@pregunta.porcentaje%</div>
                    </div>
                </div>
            </div>
        </div>

        }
    <div class="col-md-12">
        <p><h3>@Model.Preguntasimple</h3></p>
    </div>
    </div>
    
    <!--<canvas id="myChart5"></canvas>-->
</div>
<div id="container" class="mx-auto my-0 mt-4" style="width: 960px; height: 600px; border: 1px solid black">
    <canvas id="wordCloud"></canvas>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/index.umd.js" asp-append-version="true"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2 "></script>
<script>
    var nube = decodeJsonString('@Html.Raw(JsonConvert.SerializeObject(Model.nubePalabras))');
    var palabras = JSON.parse(nube);
    var surveyId = @Model.Encuesta.Id;
    //Registra plugin
    Chart.register(ChartDataLabels);
    window.onload = () => {
        const words = palabras;
        
        const data = {
            labels: words.map((d) => d.Key),
            datasets: [
                {
                    label: '',
                    data: words.map((d) => 10 + d.value * 10),
                },
            ],
        };
        const ctx = document.getElementById('wordCloud').getContext('2d');
        window.myBar = new Chart(ctx, {
            type: 'wordCloud',
            data: data,
            options: {
                title: {
                    display: false,
                    text: 'Chart.js Word Cloud',
                },
                plugins: {
                    legend: {
                        display: false,
                    },
                },
            },
        });

        $.ajax({
            url: '/Dashboard/DatosDemograficos/',
            type: 'POST',
            dataType: 'json',
            data: { surveyId: surveyId - 1 },
            success: function (data) {
                let promedioPorCategoria = 0;
                data.forEach(element => {
                    promedioPorCategoria += element.promedioGeneral;
                })

                //Datos para la encuesta de madurez
                $.ajax({
                    url: '/Dashboard/DatosMadurez/',
                    type: 'POST',
                    dataType: 'json',
                    data: { surveyId: surveyId },
                    success: function (dataMadurez) {
                        let promedioGeneral = 0;                        
                        promedioGeneral = promedioPorCategoria / (data.length)

                        datosPromedios = []
                        datosPromedios.push(dataMadurez[0].promedioGeneral.toFixed(1))
                        datosPromedios.push(promedioGeneral.toFixed(1))
                        GraficaPromedioGeneralBarras(datosPromedios);
                        MadurezDoughnut(dataMadurez);
                        PromedioTotalDoughnut(promedioGeneral);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // Se produjo un error al obtener los datos
                        console.log('Error al obtener los datos: ' + errorThrown);
                    }
                });

            },
            error: function (xhr, textStatus, errorThrown) {
                // Se produjo un error al obtener los datos
                console.log('Error al obtener los datos: ' + errorThrown);
            }
        });
    };


    function decodeJsonString(jsonString) {
        return jsonString.replace(/&quot;/g, '"');
    }
    //Funciones para mostrar

    function GraficaPromedioGeneralBarras(datos) {
        
        const dimensionBeneficioBar = document.getElementById('barChartPromedio');

        new Chart(dimensionBeneficioBar, {
            type: 'bar',
            data: {
                labels: ["Madurez", "Beneficios"],
                datasets: [
                    {
                        backgroundColor: ["rgba(77,179,199,1)", "rgba(246, 194, 100, 1)", "rgba(29,110,155,1)", "rgba(207, 66, 63, 1)"],
                        data: datos,
                    }
                ]
            },
            options: {
                barThickness: 80,
                scales: {
                    x: {
                        grid: {
                            display: false
                        }
                    },
                    y: {
                        grid: {
                            display: false
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        display: false
                    },
                    legend: {
                        display: false
                    },
                    datalabels: {
                        color: '#FFFFFF',
                        offset: 4,
                        font: {
                            weight: 'bold'
                        }
                    }
                }
            }
        });
    }

    function MadurezDoughnut(datosMadurez) {
        const dimensionBeneficioBar2 = document.getElementById('madurezDonut');
        new Chart(dimensionBeneficioBar2, {
            type: 'doughnut',
            data: {
                labels: ['Promedio Madurez'],
                datasets: [
                    {
                        label: 'Madurez',
                        backgroundColor: ["rgba(62, 149, 205, 1)", "rgba(30, 30, 30, 0.5)"],
                        data: [datosMadurez[0].promedioGeneral.toFixed(1), 5 - datosMadurez[0].promedioGeneral.toFixed(1)],
                        datalabels: {
                            color: 'white',
                            font: {
                                weight: 'bold'
                            }
                        }
                    }
                ]
            },
            options: {
                cutout: '60%',
                plugins: {
                    tooltip: {
                        display: false
                    },
                    legend: {
                        display: false
                    }
                }
            }
        });
    }

    function PromedioTotalDoughnut(promedioGeneral) {
        const dimensionBeneficioBar3 = document.getElementById('generalDonut');
        new Chart(dimensionBeneficioBar3, {
            type: 'doughnut',
            data: {
                labels: ['Promedio Otras Dimensiones'],
                datasets: [
                    {
                        label: 'Total',
                        backgroundColor: ["rgba(62, 149, 205, 1)", "rgba(30, 30, 30, .5)"],
                        data: [promedioGeneral.toFixed(1), (5 - promedioGeneral).toFixed(1)],
                        datalabels: {
                            color: 'white',
                            font: {
                                weight: 'bold'
                            }
                        }
                    }
                ]
            },
            options: {
                cutout: '60%',
                plugins: {

                    tooltip: {
                        display: false
                    },
                    legend: {
                        display: false
                    },
                }
            }

        });
    }

</script>